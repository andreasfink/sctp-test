dnl /* ==================================================================== 
dnl  * Project "sctp-test"
dnl  * Copyright © 2018 Andreas Fink (andreas@fink.org). All rights reserved.
dnl  * ====================================================================
dnl  */ 

dnl initialization

dnl initialization
AC_PREREQ([2.69])
AC_INIT([sctp-test],[1.5.2],[andreas@fink.org])

dnl generic parameters
COPYRIGHT="Copyright © 2018 Andreas Fink (andreas@fink.org). All rights reserved."
PROJECT_NAME="sctp-test"
AUTHOR="Andreas Fink <andreas@fink.org>"
CONFIG_DEFINE="SCTP_TEST_CONFIG"
VERSION=`head -n 1 VERSION`
MAJORVER=`echo $VERSION | cut -f1 -d.`
MINORVER=`echo $VERSION | cut -f2 -d.`
REVISION=`echo $VERSION | cut -f3 -d.`
CONFIG_HEADER=src/sctp_config.h
CONFIGURATION="-configuration Release"
AC_SUBST(SHELL)
AC_CONFIG_AUX_DIR(.)
AC_SET_TERMINAL_SEQUENCES()
AC_CONFIG_HEADER(${CONFIG_HEADER})
AC_SUBST(COPYRIGHT)
AC_SUBST(PROJECT_NAME)
AC_SUBST(AUTHOR)
AC_SUBST(CONFIG_DEFINE)
AC_SUBST(CONFIG_HEADER)
AC_SUBST(VERSION)

dnl Set user who runs ./configure
CUSER=`id -un`
AC_SUBST(CUSER)

AC_CONFIG_SECTION([Configuring for $PROJECT_NAME version $VERSION])

dnl Checks system type.
AC_CONFIG_SECTION([Running system checks])
AC_CANONICAL_HOST

dnl Apply system specific rules.
dnl Executable extension for systems that need one, i.e. Cygwin
dnl Set the LIBTOOL to be used to create libs
EXE_EXT=""
LIBTOOL="ar rc"
RANLIB="ranlib"
case "$host" in
  *apple-darwin*) 
	ARCH="-arch x86_64"
	OSX_DEVTOOL_DIR=`xcode-select -p`
	CFLAGS="$CFLAGS -D_REENTRANT=1 -DDARWIN=1 ${ARCH}"
	LDFLAGS="-framework CoreFoundation -framework IOKit -framework Security -F/Library/Frameworks"
	LIBTOOL="libtool -static -o" 
	LIBS="$LIBS"
	SHARED_LIBRARY_EXTENSION=dylib
    ;;

  *-linux-*)

	CFLAGS="$CFLAGS -std=c99 -fPIC -DLINUX -D_XOPEN_SOURCE=700 -D_POSIX_SOURCE"
	DEBIAN_VERSION=`cat /etc/debian_version | cut -f1 -d.`
	if [[ "$DEBIAN_VERSION" == "8" ]]
	then
        CFLAGS="$CFLAGS -D_BSD_SOURCE"
    else
        CFLAGS="$CFLAGS -D_DEFAULT_SOURCE"
	fi
    SHARED_LIBRARY_EXTENSION=so
    SHARED_FLAGS="-shared"
    ;;
esac
AC_SUBST(EXE_EXT)
AC_SUBST(LIBTOOL)
AC_SUBST(RANLIB)
AC_ARG_WITH(cflags,
[  --with-cflags=FLAGS     use FLAGS for CFLAGS],
CFLAGS="$CFLAGS $withval")

AC_ARG_WITH(libs,
[  --with-libs=FLAGS       use FLAGS for extra libraries],
LIBS="$LIBS $withval")


dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB


dnl Checks for libraries.
AC_CHECK_LIB(sctp,sctp_connectx)


dnl Config options
dnl -------------------------------------
AC_CONFIG_SECTION([Config options])



dnl Implement --enable-debug --enable-profiling options.
dnl -------------------------------------
AC_ARG_ENABLE(profiling,
[  --enable-profiling	  enable profiling  [disabled]], [
	echo Using Debuging+profiling target
	CFLAGS="$CFLAGS -pg -g -O0 -D${CONFIG_DEFINE}=Debug"
	LDFLAGS="$LDFLAGS -g"
	CONFIGURATION="-configuration Debug"
	AC_DEFINE(WS_DEBUG)
]
,
[
AC_ARG_ENABLE(debug,
[  --enable-debug	  enable debugging  [disabled]], [
	echo Using Debuging target
	CFLAGS="$CFLAGS -g -O0 -D${CONFIG_DEFINE}=Debug"
	LDFLAGS="$LDFLAGS -g"
	CONFIGURATION="-configuration Debug"
	AC_DEFINE(WS_DEBUG)
]
,
[
	echo Using Release target
	CFLAGS="$CFLAGS -Os -D${CONFIG_DEFINE}=Release"
	CONFIGURATION="-configuration Release"
])])







dnl Outputing
dnl -------------------------------------
AC_CONFIG_SECTION([Generating output files]) 

./make_version
dnl Final Output
AC_SUBST(PROJECT_NAME)
AC_SUBST(HAVE_MYSQL)
AC_SUBST(HAVE_PGSQL)
AC_SUBST(VERSION)
AC_SUBST(MAJORVER)
AC_SUBST(MINORVER)
AC_SUBST(REVISION)
AC_SUBST(CONFIGURATION)
AC_SUBST(SHARED_LIBRARY_EXTENSION)
AC_CONFIG_FILES([Makefile.osx])
AC_CONFIG_FILES([Makefile.linux])
AC_OUTPUT
case "$host" in
  *apple-darwin*) 
    cp Makefile.osx Makefile
    ;;
  *-linux-*)
    cp Makefile.linux Makefile
    ;;
  *)
    cp Makefile.linux Makefile
    ;;
esac

dnl LICENSE notice

AC_CONFIG_SECTION([License information])
cat <<X
+--------------------------------------------------------------------
| Project: ${PROJECT_NAME} ${VERSION}
| ${COPYRIGHT}
+--------------------------------------------------------------------
X
